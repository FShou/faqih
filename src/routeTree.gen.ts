/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NavbarImport } from './routes/_navbar'
import { Route as NavbarIndexImport } from './routes/_navbar/index'
import { Route as ProjectsProjectIdImport } from './routes/projects/$projectId'
import { Route as NavbarProjectsImport } from './routes/_navbar/projects'
import { Route as NavbarAboutImport } from './routes/_navbar/about'
import { Route as NavbarBlogsIndexImport } from './routes/_navbar/blogs/index'

// Create/Update Routes

const NavbarRoute = NavbarImport.update({
  id: '/_navbar',
  getParentRoute: () => rootRoute,
} as any)

const NavbarIndexRoute = NavbarIndexImport.update({
  path: '/',
  getParentRoute: () => NavbarRoute,
} as any)

const ProjectsProjectIdRoute = ProjectsProjectIdImport.update({
  path: '/projects/$projectId',
  getParentRoute: () => rootRoute,
} as any)

const NavbarProjectsRoute = NavbarProjectsImport.update({
  path: '/projects',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarAboutRoute = NavbarAboutImport.update({
  path: '/about',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarBlogsIndexRoute = NavbarBlogsIndexImport.update({
  path: '/blogs/',
  getParentRoute: () => NavbarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_navbar': {
      id: '/_navbar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavbarImport
      parentRoute: typeof rootRoute
    }
    '/_navbar/about': {
      id: '/_navbar/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof NavbarAboutImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/projects': {
      id: '/_navbar/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof NavbarProjectsImport
      parentRoute: typeof NavbarImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdImport
      parentRoute: typeof rootRoute
    }
    '/_navbar/': {
      id: '/_navbar/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavbarIndexImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/blogs/': {
      id: '/_navbar/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof NavbarBlogsIndexImport
      parentRoute: typeof NavbarImport
    }
  }
}

// Create and export the route tree

interface NavbarRouteChildren {
  NavbarAboutRoute: typeof NavbarAboutRoute
  NavbarProjectsRoute: typeof NavbarProjectsRoute
  NavbarIndexRoute: typeof NavbarIndexRoute
  NavbarBlogsIndexRoute: typeof NavbarBlogsIndexRoute
}

const NavbarRouteChildren: NavbarRouteChildren = {
  NavbarAboutRoute: NavbarAboutRoute,
  NavbarProjectsRoute: NavbarProjectsRoute,
  NavbarIndexRoute: NavbarIndexRoute,
  NavbarBlogsIndexRoute: NavbarBlogsIndexRoute,
}

const NavbarRouteWithChildren =
  NavbarRoute._addFileChildren(NavbarRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof NavbarRouteWithChildren
  '/about': typeof NavbarAboutRoute
  '/projects': typeof NavbarProjectsRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/': typeof NavbarIndexRoute
  '/blogs': typeof NavbarBlogsIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof NavbarAboutRoute
  '/projects': typeof NavbarProjectsRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/': typeof NavbarIndexRoute
  '/blogs': typeof NavbarBlogsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_navbar': typeof NavbarRouteWithChildren
  '/_navbar/about': typeof NavbarAboutRoute
  '/_navbar/projects': typeof NavbarProjectsRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/_navbar/': typeof NavbarIndexRoute
  '/_navbar/blogs/': typeof NavbarBlogsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/projects'
    | '/projects/$projectId'
    | '/'
    | '/blogs'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/projects' | '/projects/$projectId' | '/' | '/blogs'
  id:
    | '__root__'
    | '/_navbar'
    | '/_navbar/about'
    | '/_navbar/projects'
    | '/projects/$projectId'
    | '/_navbar/'
    | '/_navbar/blogs/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  NavbarRoute: typeof NavbarRouteWithChildren
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  NavbarRoute: NavbarRouteWithChildren,
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_navbar",
        "/projects/$projectId"
      ]
    },
    "/_navbar": {
      "filePath": "_navbar.tsx",
      "children": [
        "/_navbar/about",
        "/_navbar/projects",
        "/_navbar/",
        "/_navbar/blogs/"
      ]
    },
    "/_navbar/about": {
      "filePath": "_navbar/about.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/projects": {
      "filePath": "_navbar/projects.tsx",
      "parent": "/_navbar"
    },
    "/projects/$projectId": {
      "filePath": "projects/$projectId.tsx"
    },
    "/_navbar/": {
      "filePath": "_navbar/index.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/blogs/": {
      "filePath": "_navbar/blogs/index.tsx",
      "parent": "/_navbar"
    }
  }
}
ROUTE_MANIFEST_END */
